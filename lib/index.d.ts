import Mousebind from './button/Mousebind';
import MousebindObject from './interfaces/MousebindObject';
/**
 * TODO
 */
export default class Mousehawk {
    /**
     * A reference to the options for this instance of Mousehawk.
     *
     * @property {Options}
     */
    private _options;
    /**
     * A list of mouse buttons that can be used to create mousebinds.
     *
     * @property {MOUSE}
     *
     * @private
     */
    private _BUTTON;
    /**
     * A list of the created mousebinds.
     *
     * @property {Array<Mousebind>}
     *
     * @private
     *
     * @default []
     */
    private _mousebinds;
    /**
     * Keeps track of what mouse buttons have been pressed.
     *
     * @property {Object}
     *
     * @private
     */
    private _pressed;
    /**
     * Indicates whether using mousebinds are currently disabled or not.
     *
     * @property {boolean}
     *
     * @private
     *
     * @default false
     */
    private _disabled;
    /**
     * The amount of time that mousebinds are disabled for if any.
     *
     * @property {number}
     *
     * @private
     *
     * @default 0
     */
    private _disabledTime;
    /**
     * A reference to the Deltaframe game loop.
     *
     * @property {Deltaframe}
     *
     * @private
     */
    private _loop;
    constructor();
    /**
     * Gets the mouse buttons that can be used to create mousebinds.
     *
     * @returns {*}
     */
    readonly BUTTON: any;
    /**
     * Setup the mousedown and mouseup event listeners and also initialize Deltaframe if its being used.
     *
     * @private
     */
    private _boot;
    /**
     * When a mouse button is pressed, add it to the `pressed` object if it doesn't already exist and set it to `true`.
     *
     * @private
     *
     * @param {MouseEvent} ev The MouseEvent generated by the mouse button press.
     */
    private _onmousedown;
    /**
     * When a mouse button is released, set its property in the `pressed` object to `false`.
     *
     * @private
     *
     * @param {MouseEvent} ev The MouseEvent generated by the mouse button press.
     */
    private _onmouseup;
    /**
     * Creates a new mousebind for the specified mouse button.
     *
     * @param {MousebindObject} mouseButton One or more mouse buttons from the `BUTTONS` property to attach to this mousebind.
     *
     * @returns {Mousebind} Returns the newly created mousebind.
     */
    mousebind(mouseButton: MousebindObject): Mousebind | undefined;
    /**
     * Checks to see which mouse button conditions are currently being met and runs the mousebinds's attached callback method.
   *
   * @param {number} time The current timestamp which is used to check for delays and is passed to the mousebinds's callback method.
     */
    check(time: number): void;
    /**
     * Disables the use of all mousebinds until enable is called or until the wait time has expired if it is provided.
     *
     * @param {number} [lengthOfTime=Infinity] An optional amount of time to wait until mousebinds are automatically enabled again.
     */
    disable(lengthOfTime?: number): void;
    /**
     * If no end time is passed when calling the `disable` method, this method has to be called to enable the use of
     * mousebind again.
     */
    enable(): void;
}
